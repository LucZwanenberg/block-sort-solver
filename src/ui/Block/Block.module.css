.shape {
  font-size: small;
  position: relative;
}
.shape::before {
  text-shadow:
    0px 0px 0px color-mix(in srgb, var(--cube-color) 70%, #fff 30%),
    0px 0px 4px #000,
    1px 1px 2px #000;
  opacity: var(--cube-shape-opacity, 50%);
  color: transparent;
  display: inline;
  content: var(--cube-shape);
}
.shape::after {
  position: absolute;
  text-shadow:
    0px 0px 0px #000,
    1px -1px 0px #eee;
  display: block;
  content: var(--cube-shape);
  transform: translateY(-3rem) scaleY(0.6);
  background-color: #000;
  background-clip: text;
  color: transparent;
  opacity: calc(var(--cube-shape-opacity, 50%) * 0.6);

  @apply w-block;
}

.layer {
  @apply absolute w-full h-full rounded-md;
}

.texture {
  background: url("../../assets/wood-texture.png");
  mix-blend-mode: color-burn;
  @apply opacity-70;
}

.gradient {
  background: linear-gradient(
    rgba(0, 0, 0, 30%) 0%,
    rgba(0, 0, 0, 0%) 5%,
    rgba(0, 0, 0, 0%) 30%,
    rgba(255, 255, 255, 20%) 35%,
    rgba(0, 0, 0, 20%) 40%,
    rgba(0, 0, 0, 20%) 90%,
    rgba(0, 0, 0, 50%) 100%
  );
}

.hidden {
  background: linear-gradient(
    rgba(0, 0, 0, 50%) 0%,
    rgba(0, 0, 0, 20%) 5%,
    rgba(0, 0, 0, 20%) 25%,
    rgba(0, 0, 0, 20%) 30%,
    rgba(0, 0, 0, 0%) 35%,
    rgba(0, 0, 0, 55%) 35%,
    rgba(0, 0, 0, 55%) 60%,
    rgba(0, 0, 0, 30%) 65%,
    rgba(0, 0, 0, 43%) 80%,
    rgba(0, 0, 0, 40%) 85%,
    rgba(0, 0, 0, 5%) 95%,
    rgba(0, 0, 0, 50%) 100%
  );
}

.gradientLocked {
  transition: opacity 2s;
  background: linear-gradient(
    rgba(0, 0, 0, 30%) 0%,
    rgba(0, 0, 0, 30%) 20%,
    rgba(0, 0, 0, 30%) 85%,
    rgba(0, 0, 0, 30%) 100%
  );
}

.selected {
  transform: translateY(-2rem);
  @apply ease-in-out animate-wobble;
}

.selectedOutline {
  box-shadow: 0px 0px 4px 4px var(--cube-color);
  @apply outline-2 outline-white outline;
}

.shadow {
  background-color: #0006;
  box-shadow: 6px 1px 2px 1px #0006;
  @apply absolute w-full h-block rounded-md translate-y-top-block;
}

@property --cube-color {
  syntax: "<color>";
  initial-value: 0;
  inherits: false;
}
